/* stylelint-disable declaration-no-important */
@import '../settings/index.scss';

$_flex-direction-values: (
  row: row,
  column: column,
  row-reverse: row-reverse,
  column-reverse: column-reverse,
);

@each $name in map-keys($_flex-direction-values) {
  $value: map-get($_flex-direction-values, $name);
  // Example: .luk-flex-d--column
  .luk-flex-d--#{$name} {
    // Example: flex-direction: column
    flex-direction: $value !important;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  $viewport: map-get($breakpoints, $breakpoint);

  @media (min-width: $viewport) {
    @each $name in map-keys($_flex-direction-values) {
      $value: map-get($_flex-direction-values, $name);
      // Example: .luk-lg-flex-d--column
      .luk-#{$breakpoint}-flex-d--#{$name} {
        // Example: flex-direction: column
        flex-direction: $value !important;
      }
    }
  }
}

$_justify-content-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
);

@each $name in map-keys($_justify-content-values) {
  $value: map-get($_justify-content-values, $name);
  // Example: .luk-justify-content--start
  .luk-justify-content--#{$name} {
    // Example: justify-content: flex-start
    justify-content: $value !important;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  $viewport: map-get($breakpoints, $breakpoint);

  @media (min-width: $viewport) {
    @each $name in map-keys($_justify-content-values) {
      $value: map-get($_justify-content-values, $name);
      // Example: .luk-lg-justify-content--start
      .luk-#{$breakpoint}-justify-content--#{$name} {
        // Example: justify-content: flex-start
        justify-content: $value !important;
      }
    }
  }
}

$_align-items-values: (
  start: flex-start,
  end: flex-end,
  center: center,
  baseline: baseline,
  stretch: stretch,
);

@each $name in map-keys($_align-items-values) {
  $value: map-get($_align-items-values, $name);
  // Example: .luk-align-items--start
  .luk-align-items--#{$name} {
    // Example: align-items: flex-start
    align-items: $value !important;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  $viewport: map-get($breakpoints, $breakpoint);

  @media (min-width: $viewport) {
    @each $name in map-keys($_align-items-values) {
      $value: map-get($_align-items-values, $name);
      // Example: .luk-lg-align-items--start
      .luk-#{$breakpoint}-align-items--#{$name} {
        // Example: align-items: flex-start
        align-items: $value !important;
      }
    }
  }
}

$_flex-wrap-values: (
  nowrap: nowrap,
  wrap: wrap,
  reverse: wrap-reverse,
);

@each $name in map-keys($_flex-wrap-values) {
  $value: map-get($_flex-wrap-values, $name);
  // Example: .luk-flex-wrap--start
  .luk-flex-wrap--#{$name} {
    // Example: flex-wrap: flex-start
    flex-wrap: $value !important;
  }
}

@each $breakpoint in map-keys($breakpoints) {
  $viewport: map-get($breakpoints, $breakpoint);

  @media (min-width: $viewport) {
    @each $name in map-keys($_flex-wrap-values) {
      $value: map-get($_flex-wrap-values, $name);
      // Example: .luk-lg-flex-wrap--start
      .luk-#{$breakpoint}-flex-wrap--#{$name} {
        // Example: flex-wrap: flex-start
        flex-wrap: $value !important;
      }
    }
  }
}
